[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "shop",
        "description": "shop",
        "isExtraImport": true,
        "detail": "shop",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "importPath": "cart.views",
        "description": "cart.views",
        "isExtraImport": true,
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "importPath": "cart.views",
        "description": "cart.views",
        "isExtraImport": true,
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "order",
        "description": "order",
        "isExtraImport": true,
        "detail": "order",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AbstractBaseUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "GenericAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "CreateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "get_current_site",
        "importPath": "django.contrib.sites.shortcuts",
        "description": "django.contrib.sites.shortcuts",
        "isExtraImport": true,
        "detail": "django.contrib.sites.shortcuts",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "swagger_auto_schema",
        "importPath": "drf_yasg.utils",
        "description": "drf_yasg.utils",
        "isExtraImport": true,
        "detail": "drf_yasg.utils",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Category",
        "importPath": "shop.models",
        "description": "shop.models",
        "isExtraImport": true,
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "CreateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "DestroyModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "RetrieveModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "ListModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "SimpleProductSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "SAFE_METHODS",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "SearchFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "api.asgi",
        "description": "api.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "api.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = config('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nEMAIL_BACKEND = config('EMAIL_BACKEND')\nEMAIL_HOST = config('EMAIL_HOST')\nEMAIL_PORT = config('EMAIL_PORT')",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "SECRET_KEY = config('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nEMAIL_BACKEND = config('EMAIL_BACKEND')\nEMAIL_HOST = config('EMAIL_HOST')\nEMAIL_PORT = config('EMAIL_PORT')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DEBUG = True\nEMAIL_BACKEND = config('EMAIL_BACKEND')\nEMAIL_HOST = config('EMAIL_HOST')\nEMAIL_PORT = config('EMAIL_PORT')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_BACKEND = config('EMAIL_BACKEND')\nEMAIL_HOST = config('EMAIL_HOST')\nEMAIL_PORT = config('EMAIL_PORT')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_HOST = config('EMAIL_HOST')\nEMAIL_PORT = config('EMAIL_PORT')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_PORT = config('EMAIL_PORT')\nEMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_USE_TLS = config('EMAIL_USE_TLS')\nEMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_HOST_USER = config('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')\nALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\nAUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'authentication.User'\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'debug_toolbar',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'debug_toolbar',\n    'rest_framework',\n    'rest_framework_simplejwt',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n]",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "ROOT_URLCONF = 'api.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR /'template'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR /'template'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "WSGI_APPLICATION = 'api.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nREST_FRAMEWORK = {",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\nREST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n}\nSIMPLE_JWT = {\n   'AUTH_HEADER_TYPES': ('JWT',),\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=14),\n    'SLIDING_TOKEN_LIFETIME': timedelta(days=30),",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "SIMPLE_JWT = {\n   'AUTH_HEADER_TYPES': ('JWT',),\n    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=14),\n    'SLIDING_TOKEN_LIFETIME': timedelta(days=30),\n    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=27),\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR /'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "api.settings",
        "description": "api.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "api.settings",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('products', views.ProductViewSet, basename='product')\nrouter.register('categories', views.CategoryViewSet, basename='category')\n# router.register('users', UserViewSet)\nrouter.register('carts', CartViewSet, basename='cart')\n# Create a nested router for cart items\ncart_router = routers.NestedDefaultRouter(router, 'carts', lookup='cart')\ncart_router.register('items', CartItemViewSet, basename='cart-items')\n# Create a router for orders\nrouter.register('order', order_view.OrderViewSet, basename='order')",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "cart_router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "cart_router = routers.NestedDefaultRouter(router, 'carts', lookup='cart')\ncart_router.register('items', CartItemViewSet, basename='cart-items')\n# Create a router for orders\nrouter.register('order', order_view.OrderViewSet, basename='order')\n# Create a nested router for order items\norder_router = routers.NestedDefaultRouter(router, 'order', lookup='order')\norder_router.register('items', order_view.OrderItemViewSet, basename='order-items')\nschema_view = get_schema_view(\n   openapi.Info(\n      title=\"Ecommerce API\",",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "order_router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "order_router = routers.NestedDefaultRouter(router, 'order', lookup='order')\norder_router.register('items', order_view.OrderItemViewSet, basename='order-items')\nschema_view = get_schema_view(\n   openapi.Info(\n      title=\"Ecommerce API\",\n      default_version='v1',\n      description=\"Test description\",\n      terms_of_service=\"http://localhos:8000/policies/terms/\",\n      contact=openapi.Contact(email=\"contact@api.local\"),\n      license=openapi.License(name=\"API License\"),",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "schema_view = get_schema_view(\n   openapi.Info(\n      title=\"Ecommerce API\",\n      default_version='v1',\n      description=\"Test description\",\n      terms_of_service=\"http://localhos:8000/policies/terms/\",\n      contact=openapi.Contact(email=\"contact@api.local\"),\n      license=openapi.License(name=\"API License\"),\n   ),\n   public=True,",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('__debug__/', include('debug_toolbar.urls')),\n    path('auth/', include('authentication.urls')),\n    # path('cart/', include('cart.urls')),\n    # path('order/', include('order.urls')),\n    # path('shop/', include('shop.urls')),\n    path('', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),\n] + router.urls + cart_router.urls + order_router.urls",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "api.wsgi",
        "description": "api.wsgi",
        "peekOfCode": "application = get_wsgi_application()\napp = application",
        "detail": "api.wsgi",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "api.wsgi",
        "description": "api.wsgi",
        "peekOfCode": "app = application",
        "detail": "api.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "authentication.migrations.0001_initial",
        "description": "authentication.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "authentication.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "authentication.admin",
        "description": "authentication.admin",
        "peekOfCode": "class UserAdmin(UserAdmin):\n    list_display = ('email', 'first_name', 'last_name', 'username', 'last_login', 'date_joined', 'is_active')\n    list_display_links = ('email', 'first_name', 'last_name')\n    readonly_fields = ('last_login', 'date_joined')\n    ordering = ('-date_joined',)\n    filter_horizontal = ()\n    list_filter = ()\n    fieldsets = ()\nadmin.site.register(User, UserAdmin)",
        "detail": "authentication.admin",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "authentication.apps",
        "description": "authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'authentication'",
        "detail": "authentication.apps",
        "documentation": {}
    },
    {
        "label": "UserManagement",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class UserManagement(BaseUserManager):\n    def create_user(self, email, first_name, last_name, password=None):\n        if not email:\n            raise ValueError('Users must have an email address')\n        user = self.model(\n            email=self.normalize_email(email),\n            username=email.split('@')[0],\n            first_name = first_name,\n            last_name= last_name\n        )",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "authentication.models",
        "description": "authentication.models",
        "peekOfCode": "class User(AbstractBaseUser, PermissionsMixin):\n    email = models.EmailField(max_length=255, unique=True)\n    username = models.CharField(max_length=255, unique=True)\n    first_name = models.CharField(max_length=255)\n    last_name = models.CharField(max_length=255)\n    is_admin = models.BooleanField(default=False)\n    is_staff = models.BooleanField(default=False)\n    is_superuser = models.BooleanField(default=False)\n    date_joined = models.DateTimeField(auto_now_add=True)\n    last_login = models.DateTimeField(auto_now=True)",
        "detail": "authentication.models",
        "documentation": {}
    },
    {
        "label": "RegisterSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class RegisterSerializer(serializers.ModelSerializer):\n    username = serializers.CharField(max_length=255, read_only=True)\n    password = serializers.CharField(max_length=68, min_length=6, write_only=True)\n    class Meta:\n        model = User\n        fields = ['first_name', 'last_name', 'email', 'username', 'password']\n    def create(self, validated_data):\n        return User.objects.create_user(**validated_data)\nclass LoginSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(max_length=68, min_length=6, write_only=True)",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "LoginSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class LoginSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(max_length=68, min_length=6, write_only=True)\n    email = serializers.EmailField(max_length=68, write_only=True)\n    class Meta:\n        model = User\n        fields = ['email', 'password']\nclass UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ('email',)",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = User\n        fields = ('email',)\nclass PasswordResetRequestSerializer(serializers.Serializer):\n    email = serializers.EmailField()\nclass SetPasswordSerializer(serializers.Serializer):\n    password = serializers.CharField(write_only=True)\n    confirm_password = serializers.CharField(write_only=True)\n    def validate(self, data):",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "PasswordResetRequestSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class PasswordResetRequestSerializer(serializers.Serializer):\n    email = serializers.EmailField()\nclass SetPasswordSerializer(serializers.Serializer):\n    password = serializers.CharField(write_only=True)\n    confirm_password = serializers.CharField(write_only=True)\n    def validate(self, data):\n        \"\"\"\n        Validate that the provided passwords match and meet your criteria.\n        \"\"\"\n        password = data.get('password')",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "SetPasswordSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class SetPasswordSerializer(serializers.Serializer):\n    password = serializers.CharField(write_only=True)\n    confirm_password = serializers.CharField(write_only=True)\n    def validate(self, data):\n        \"\"\"\n        Validate that the provided passwords match and meet your criteria.\n        \"\"\"\n        password = data.get('password')\n        confirm_password = data.get('confirm_password')\n        if password != confirm_password:",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "EmailVerificationSerializer",
        "kind": 6,
        "importPath": "authentication.serializers",
        "description": "authentication.serializers",
        "peekOfCode": "class EmailVerificationSerializer(serializers.ModelSerializer):\n    token = serializers.CharField(max_length=555)\n    class Meta:\n        model = User\n        fields = ['token']",
        "detail": "authentication.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "authentication.urls",
        "description": "authentication.urls",
        "peekOfCode": "urlpatterns = [\n    path('register/', RegisterView.as_view(), name='register'),\n    path('activate/<str:uid>/<str:token>/', VerifyEmail.as_view(), name='activate'),\n    path('login/', LoginView.as_view(), name='login'),\n    path('password-reset/', PasswordResetRequestView.as_view(), name='password-reset'),\n    path('reset-password/<str:uid>/<str:token>/', SetPasswordView.as_view(), name='password_reset_confirm'),\n]",
        "detail": "authentication.urls",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class RegisterView(GenericAPIView):\n    queryset = User.objects.all()\n    serializer_class = RegisterSerializer\n    def post(self, request, *args, **kwargs):\n        user = request.data\n        serializer = self.serializer_class(data=user)\n        serializer.is_valid(raise_exception=True)\n        serializer.save()\n        user_data = serializer.data\n        user = User.objects.get(email=user_data['email'])",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class LoginView(GenericAPIView):\n    serializer_class = LoginSerializer\n    def post(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        email = serializer.validated_data['email']\n        password = serializer.validated_data['password']\n        if not email or not password:\n            return Response({'error': 'Email and password are required.'}, status=status.HTTP_400_BAD_REQUEST)\n        # Authenticate using email",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "PasswordResetRequestView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class PasswordResetRequestView(CreateAPIView):\n    serializer_class = UserSerializer\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        if serializer.is_valid():\n            email = serializer.validated_data['email']\n            try:\n                user = User.objects.get(email=email)\n            except User.DoesNotExist:\n                return Response({'detail': 'User not found'}, status=status.HTTP_404_NOT_FOUND)",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "SetPasswordView",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class SetPasswordView(GenericAPIView):\n    serializer_class = SetPasswordSerializer\n    def post(self, request, uid, token):\n        try:\n            # Decode the UID to get the user's primary key\n            uid_bytes = urlsafe_base64_decode(uid)\n            user_id = str(uid_bytes, encoding='utf-8')\n            user = User.objects.get(pk=user_id)\n            # Check if the token is valid\n            if not default_token_generator.check_token(user, token):",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "VerifyEmail",
        "kind": 6,
        "importPath": "authentication.views",
        "description": "authentication.views",
        "peekOfCode": "class VerifyEmail(views.APIView):\n    serializer_class = EmailVerificationSerializer\n    token_param_config = openapi.Parameter(\n        'token', in_=openapi.IN_QUERY, description='Description', type=openapi.TYPE_STRING)\n    @swagger_auto_schema(manual_parameters=[token_param_config])\n    def get(self, request):\n        token = request.GET.get('token')\n        try:\n            print(\"Received token:\", token)  # Debugging: Print the received token\n            decoded_token = jwt.decode(token, settings.SECRET_KEY, algorithms=['HS256'])",
        "detail": "authentication.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cart.migrations.0001_initial",
        "description": "cart.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('shop', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "cart.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CartConfig",
        "kind": 6,
        "importPath": "cart.apps",
        "description": "cart.apps",
        "peekOfCode": "class CartConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cart'",
        "detail": "cart.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class Cart(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return str(self.id)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE, related_name='items')\n    product = models.ForeignKey(Product, on_delete=models.PROTECT)\n    quantity = models.PositiveIntegerField(default=1)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE, related_name='items')\n    product = models.ForeignKey(Product, on_delete=models.PROTECT)\n    quantity = models.PositiveIntegerField(default=1)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return str(self.cart.id)",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "SimpleProductSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class SimpleProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['name', 'price']\nclass CartItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()\n    total = serializers.SerializerMethodField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'product', 'quantity', 'total']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer()\n    total = serializers.SerializerMethodField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'product', 'quantity', 'total']\n    def get_total(self, obj):\n        return obj.product.price * obj.quantity\nclass CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True)",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True)\n    total_price = serializers.SerializerMethodField()\n    class Meta:\n        model = Cart\n        fields = ['items', 'total_price']\n    def get_total_price(self, obj):\n        return sum(item.product.price * item.quantity for item in obj.items.all())\nclass CartCreateSerializer(serializers.ModelSerializer):\n    id = serializers.UUIDField(read_only=True)",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartCreateSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartCreateSerializer(serializers.ModelSerializer):\n    id = serializers.UUIDField(read_only=True)\n    items = CartItemSerializer(many=True, read_only=True)\n    class Meta:\n        model = Cart\n        fields = ['id', 'items']\nclass CreateCartItemSerializer(serializers.ModelSerializer):\n    quantity = serializers.IntegerField()\n    class Meta:\n        model = CartItem",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CreateCartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CreateCartItemSerializer(serializers.ModelSerializer):\n    quantity = serializers.IntegerField()\n    class Meta:\n        model = CartItem\n        fields = ['product', 'quantity']\n    def validate_quantity(self, value):\n        if value <= 0:\n            raise serializers.ValidationError(\"The quantity must be a positive integer.\")\n        return value\n    def create(self, validated_data):",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class UpdateCartItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CartItem\n        fields = ['quantity']\n    def validate_quantity(self, value):\n        if value <= 0:\n            raise serializers.ValidationError(\"The quantity must be a positive integer.\")\n        return value\n    def update(self, instance, validated_data):\n        # Calculate the change in quantity",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class CartViewSet(ModelViewSet):\n    queryset = Cart.objects.all()\n    def get_serializer_class(self):\n        if self.action == 'create':\n            return CartCreateSerializer\n        return CartSerializer\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data={})\n        serializer.is_valid(raise_exception=True)\n        serializer.save()",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class CartItemViewSet(ModelViewSet):\n    def get_serializer_class(self):\n        if self.action == 'create':\n            return CreateCartItemSerializer\n        elif self.action == 'update':\n            return UpdateCartItemSerializer\n        return CartItemSerializer\n    def get_queryset(self):\n        cart_pk = self.kwargs.get('cart_pk')\n        try:",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0001_initial",
        "description": "order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('cart', '0001_initial'),\n        ('shop', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order',",
        "detail": "order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "order.apps",
        "description": "order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'order'",
        "detail": "order.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class Order(models.Model):\n    PENDING='P'\n    SHIPPED='S'\n    DELIVERED='D'\n    STATUS_CHOICE = [\n        (PENDING, 'PENDING'),\n        (SHIPPED, 'SHIPPED'),\n        (DELIVERED, 'DELIVERED'),\n    ]\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name='order_items')\n    product = models.ForeignKey(Product, on_delete=models.PROTECT, related_name='items')\n    quantity = models.PositiveIntegerField()\n    def __str__(self):\n        return str(self.order.id)",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItemSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class OrderItemSerializer(serializers.ModelSerializer):\n    product = SimpleProductSerializer(read_only=True)\n    quantity = serializers.IntegerField(read_only=True)\n    total_price = serializers.SerializerMethodField()\n    def get_total_price(self, obj):\n        return obj.product.price * obj.quantity\n    class Meta:\n        model = OrderItem\n        fields = ['product', 'quantity', 'total_price']\nclass OrderSerializer(serializers.ModelSerializer):",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    total = serializers.SerializerMethodField()\n    items = serializers.SerializerMethodField()\n    def get_items(self, obj):\n        order_items = OrderItem.objects.filter(order=obj)\n        return OrderItemSerializer(order_items, many=True).data\n    def get_total(self, obj):\n        return sum(item.product.price * item.quantity for item in obj.order_items.all())  # Calculate the total here\n    class Meta:\n        model = Order",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "OrderViewSet",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class OrderViewSet(ModelViewSet):\n    queryset = Order.objects.all()\n    serializer_class = OrderSerializer\n    permission_classes = [IsAuthenticated]\n    def get_serializer_context(self):\n        return {'user': self.request.user}\nclass OrderItemViewSet(ModelViewSet):\n    queryset = OrderItem.objects.all()\n    serializer_class = OrderItemSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "OrderItemViewSet",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class OrderItemViewSet(ModelViewSet):\n    queryset = OrderItem.objects.all()\n    serializer_class = OrderItemSerializer\n    permission_classes = [IsAuthenticated]",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "shop.migrations.0001_initial",
        "description": "shop.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "shop.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ShopConfig",
        "kind": 6,
        "importPath": "shop.apps",
        "description": "shop.apps",
        "peekOfCode": "class ShopConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'shop'",
        "detail": "shop.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Category(models.Model):\n    name = models.CharField(max_length=100)\n    parent = models.ForeignKey('self', null=True, blank=True, on_delete=models.CASCADE, related_name='children')\n    def __str__(self):\n        return self.name\nclass Product(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "shop.models",
        "description": "shop.models",
        "peekOfCode": "class Product(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    category = models.ForeignKey(\n        Category,\n        on_delete=models.CASCADE,\n        related_name='products'\n    )\n    stock = models.PositiveIntegerField()",
        "detail": "shop.models",
        "documentation": {}
    },
    {
        "label": "CategorySerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class CategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ['id', 'name', 'parent']\nclass RecursiveCategorySerializer(serializers.Serializer):\n    def to_representation(self, instance):\n        serializer = self.parent.parent.__class__(instance, context=self.context)\n        return serializer.data\nclass GetCategorySerializer(serializers.ModelSerializer):\n    children = RecursiveCategorySerializer(many=True, read_only=True)",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "RecursiveCategorySerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class RecursiveCategorySerializer(serializers.Serializer):\n    def to_representation(self, instance):\n        serializer = self.parent.parent.__class__(instance, context=self.context)\n        return serializer.data\nclass GetCategorySerializer(serializers.ModelSerializer):\n    children = RecursiveCategorySerializer(many=True, read_only=True)\n    product_count = serializers.SerializerMethodField()\n    class Meta:\n        model = Category\n        fields = ['id', 'name', 'children', 'product_count']",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "GetCategorySerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class GetCategorySerializer(serializers.ModelSerializer):\n    children = RecursiveCategorySerializer(many=True, read_only=True)\n    product_count = serializers.SerializerMethodField()\n    class Meta:\n        model = Category\n        fields = ['id', 'name', 'children', 'product_count']\n    def get_product_count(self, instance):\n        # Count the number of products related to this category\n        return instance.products.count()\n    def to_representation(self, instance):",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleCategorySerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class SimpleCategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Category\n        fields = ['name']\nclass ProductSerializer(serializers.ModelSerializer):\n    category = SimpleCategorySerializer()\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'description', 'price', 'stock', 'category']\nclass CreateProductSerializer(serializers.ModelSerializer):",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class ProductSerializer(serializers.ModelSerializer):\n    category = SimpleCategorySerializer()\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'description', 'price', 'stock', 'category']\nclass CreateProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'description', 'price', 'stock', 'category']\nclass SimpleProductSerializer(serializers.ModelSerializer):",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "CreateProductSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class CreateProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['id', 'name', 'description', 'price', 'stock', 'category']\nclass SimpleProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['name', 'price']",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleProductSerializer",
        "kind": 6,
        "importPath": "shop.serializers",
        "description": "shop.serializers",
        "peekOfCode": "class SimpleProductSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        fields = ['name', 'price']",
        "detail": "shop.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "shop.urls",
        "description": "shop.urls",
        "peekOfCode": "urlpatterns = router.urls",
        "detail": "shop.urls",
        "documentation": {}
    },
    {
        "label": "ReadOnly",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ReadOnly(BasePermission):\n    def has_permission(self, request, view):\n        return request.method in SAFE_METHODS\nclass ProductFilter(filters.FilterSet):\n    min_price = filters.NumberFilter(field_name='price', lookup_expr='gte')\n    max_price = filters.NumberFilter(field_name='price', lookup_expr='lte')\n    category_name = filters.CharFilter(method='filter_category_name')\n    class Meta:\n        model = Product\n        fields = ['min_price', 'max_price']",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "ProductFilter",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ProductFilter(filters.FilterSet):\n    min_price = filters.NumberFilter(field_name='price', lookup_expr='gte')\n    max_price = filters.NumberFilter(field_name='price', lookup_expr='lte')\n    category_name = filters.CharFilter(method='filter_category_name')\n    class Meta:\n        model = Product\n        fields = ['min_price', 'max_price']\n    def filter_category_name(self, queryset, name, value):\n        return queryset.filter(category__name__icontains=value)\nclass CategoryViewSet(ModelViewSet):",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "CategoryViewSet",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class CategoryViewSet(ModelViewSet):\n    queryset = Category.objects.select_related('parent').filter(parent=None)\n    serializer_class = GetCategorySerializer\n    permission_classes = [IsAdminUser | ReadOnly]\n    def get_serializer_class(self):\n        if self.action == 'create':\n            return CategorySerializer\n        elif self.action == 'list' or self.action == 'retrieve':\n            return GetCategorySerializer\n        return CategorySerializer",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "shop.views",
        "description": "shop.views",
        "peekOfCode": "class ProductViewSet(ModelViewSet):\n    queryset = Product.objects.all()\n    serializer_class = ProductSerializer\n    filter_backends = (filters.DjangoFilterBackend, SearchFilter)\n    filterset_class = ProductFilter\n    search_fields = ['name', 'description']\n    permission_classes = [IsAdminUser | ReadOnly]\n    def perform_create(self, serializer):\n        serializer.save()\n    def perform_update(self, serializer):",
        "detail": "shop.views",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "automotive_product_seed",
        "description": "automotive_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Car Accessories\n        {\n            \"category\": \"Car Accessories\",\n            \"name\": \"Anker Roav Dash Cam\",\n            \"description\": \"A high-resolution dash cam that records clear footage of your drives and provides extra security on the road.\",\n            \"price\": 89.99,\n            \"stock\": 25,\n        },",
        "detail": "automotive_product_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "beauty_products_seed",
        "description": "beauty_products_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Skincare\n        {\n            \"category\": \"Skincare\",\n            \"name\": \"CeraVe Hydrating Cleanser\",\n            \"description\": \"A gentle and hydrating facial cleanser that effectively removes dirt and makeup without over-drying the skin.\",\n            \"price\": 12.99,\n            \"stock\": 40,\n        },",
        "detail": "beauty_products_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "books_and_media_product_seed",
        "description": "books_and_media_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Fiction\n        {\n            \"category\": \"Fiction\",\n            \"name\": \"The Great Gatsby by F. Scott Fitzgerald\",\n            \"description\": \"A classic novel set in the Roaring Twenties, exploring themes of wealth, love, and the American Dream.\",\n            \"price\": 14.99,\n            \"stock\": 25,\n        },",
        "detail": "books_and_media_product_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "category_seed",
        "description": "category_seed",
        "peekOfCode": "def seed_data():\n    categories_data = [\n        {\"name\": \"Electronics\", \"subcategories\": [\"Smartphones\", \"Laptops\", \"Headphones & Speakers\", \"Wearable Devices\", \"Cameras & Photography\", \"Accessories\"]},\n        {\"name\": \"Clothing\", \"subcategories\": [\"Men's Clothing\", \"Women's Clothing\", \"Kids' Clothing\", \"Shoes & Footwear\", \"Sportswear\", \"Lingerie & Sleepwear\"]},\n        {\"name\": \"Home & Kitchen\", \"subcategories\": [\"Furniture\", \"Kitchen Appliances\", \"Home Decor\", \"Bedding & Linens\", \"Cookware & Dining\", \"Cleaning Supplies\"]},\n        {\"name\": \"Sports & Outdoors\", \"subcategories\": [\"Fitness Equipment\", \"Outdoor Gear\", \"Sports Apparel\", \"Biking\", \"Camping & Hiking\", \"Team Sports\"]},\n        {\"name\": \"Books & Media\", \"subcategories\": [\"Fiction\", \"Non-Fiction\", \"Textbooks\", \"Movies & TV Shows\", \"Music\", \"Magazines\"]},\n        {\"name\": \"Toys & Games\", \"subcategories\": [\"Action Figures & Playsets\", \"Board Games\", \"Outdoor Toys\", \"Puzzles\", \"Dolls & Accessories\"]},\n        {\"name\": \"Beauty & Personal Care\", \"subcategories\": [\"Skincare\", \"Haircare\", \"Makeup\", \"Fragrances\", \"Personal Hygiene\"]},\n        {\"name\": \"Automotive\", \"subcategories\": [\"Car Accessories\", \"Motorcycle Parts\", \"Car Care\", \"Tires & Wheels\"]},",
        "detail": "category_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "clothing_product_seed",
        "description": "clothing_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Men's Clothing\n        {\n            \"category\": \"Men's Clothing\",\n            \"name\": \"Men's Slim-Fit Suit\",\n            \"description\": \"A classic slim-fit suit for men, perfect for formal occasions and business meetings.\",\n            \"price\": 299.99,\n            \"stock\": 20,\n        },",
        "detail": "clothing_product_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "electronics_product_seeed",
        "description": "electronics_product_seeed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        {\n            \"category\": \"Smartphones\",\n            \"name\": \"Apple iPhone 13 Pro Max\",\n            \"description\": \"The latest flagship smartphone from Apple with a stunning Super Retina XDR display, A15 Bionic chip, and advanced camera system.\",\n            \"price\": 1099.00,\n            \"stock\": 50,\n        },\n        {",
        "detail": "electronics_product_seeed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "home_and_kitchen_product_seed",
        "description": "home_and_kitchen_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Furniture\n        {\n            \"category\": \"Furniture\",\n            \"name\": \"3-Piece Living Room Set\",\n            \"description\": \"A stylish and comfortable living room set including a sofa, loveseat, and coffee table.\",\n            \"price\": 899.99,\n            \"stock\": 15,\n        },",
        "detail": "home_and_kitchen_product_seed",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'api.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "sport_and_outdor_product_seed",
        "description": "sport_and_outdor_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Fitness Equipment\n        {\n            \"category\": \"Fitness Equipment\",\n            \"name\": \"Treadmill with Incline\",\n            \"description\": \"A high-quality treadmill with adjustable incline, perfect for cardio workouts at home.\",\n            \"price\": 899.99,\n            \"stock\": 10,\n        },",
        "detail": "sport_and_outdor_product_seed",
        "documentation": {}
    },
    {
        "label": "seed_data",
        "kind": 2,
        "importPath": "toys_and_games_product_seed",
        "description": "toys_and_games_product_seed",
        "peekOfCode": "def seed_data():\n    products_data = [\n        # Action Figures & Playsets\n        {\n            \"category\": \"Action Figures & Playsets\",\n            \"name\": \"Marvel Avengers Action Figure Set\",\n            \"description\": \"A set of action figures featuring iconic Marvel Avengers characters for imaginative play and display.\",\n            \"price\": 34.99,\n            \"stock\": 30,\n        },",
        "detail": "toys_and_games_product_seed",
        "documentation": {}
    }
]